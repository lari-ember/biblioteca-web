# Dockerfile.dev
FROM python:3.10-slim

# Configura working directory
WORKDIR /app

# Atualiza pip e instala dependências de runtime
# Assumimos que requirements.txt inclui todas as libs necessárias (Flask, SQLAlchemy, psycopg2-binary, etc).
RUN pip install --no-cache-dir --upgrade pip

# Copia apenas requirements para aproveitar cache de camadas ao alterar código sem mudar dependencies
COPY requirements.txt .

# Instala dependências
RUN pip install --no-cache-dir -r requirements.txt

# Copia to o código para /app
COPY . .

# Cria usuário não-root
RUN adduser --disabled-password --gecos "" appuser \
    && chown -R appuser /app

# Use o usuário não-root
USER appuser

# Variáveis de ambiente para desenvolvimento
ENV FLASK_APP=run.py
ENV FLASK_ENV=development
# Se precisar instalar curl ou wget para healthcheck em dev, descomente:
# RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Exponha porta padrão do Flask em dev
EXPOSE 8080

# Comando padrão: rodar Flask dev server com hot reload
CMD ["sh", "-c", "sleep 12 && flask run --host=0.0.0.0 --port=8080"]
